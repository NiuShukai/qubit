/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";
import { useFrame } from "react-three-fiber";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    group33035333: THREE.Mesh;
    group321168656: THREE.Mesh;
    group168151239: THREE.Mesh;
    group1396491336: THREE.Mesh;
    group330315740: THREE.Mesh;
    group1849504549: THREE.Mesh;
    group453806767: THREE.Mesh;
    group1115912390: THREE.Mesh;
    group933851409: THREE.Mesh;
    group65212722: THREE.Mesh;
    group169545312: THREE.Mesh;
    group331324022: THREE.Mesh;
    group1646714450: THREE.Mesh;
    group1845638395: THREE.Mesh;
    group1961431636: THREE.Mesh;
    group888183759: THREE.Mesh;
    group1993946829: THREE.Mesh;
    group67431401: THREE.Mesh;
    group2119193254: THREE.Mesh;
    group1876825008: THREE.Mesh;
    group1691584488: THREE.Mesh;
    group547325619: THREE.Mesh;
    group1609856760: THREE.Mesh;
    group1019419074: THREE.Mesh;
    group1205001057: THREE.Mesh;
    group1874016474: THREE.Mesh;
    group977698350: THREE.Mesh;
    group1313309135: THREE.Mesh;
  };
  materials: {
    mat12: THREE.MeshStandardMaterial;
    mat7: THREE.MeshStandardMaterial;
    mat8: THREE.MeshStandardMaterial;
    mat5: THREE.MeshStandardMaterial;
    mat21: THREE.MeshStandardMaterial;
    mat13: THREE.MeshStandardMaterial;
    mat10: THREE.MeshStandardMaterial;
    mat23: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("/models/cube.glb") as GLTFResult;

  useFrame(() => {
    if (group.current !== undefined) {
      group.current.rotation.x = group.current.rotation.y += 0.02;
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        material={materials.mat12}
        geometry={nodes.group33035333.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat7}
        geometry={nodes.group321168656.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat8}
        geometry={nodes.group168151239.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat5}
        geometry={nodes.group1396491336.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat21}
        geometry={nodes.group330315740.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat5}
        geometry={nodes.group1849504549.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat13}
        geometry={nodes.group453806767.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat12}
        geometry={nodes.group1115912390.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat21}
        geometry={nodes.group933851409.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat7}
        geometry={nodes.group65212722.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat13}
        geometry={nodes.group169545312.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat8}
        geometry={nodes.group331324022.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat12}
        geometry={nodes.group1646714450.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat21}
        geometry={nodes.group1845638395.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat21}
        geometry={nodes.group1961431636.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat21}
        geometry={nodes.group888183759.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat10}
        geometry={nodes.group1993946829.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat10}
        geometry={nodes.group67431401.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat10}
        geometry={nodes.group2119193254.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat12}
        geometry={nodes.group1876825008.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat8}
        geometry={nodes.group1691584488.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat10}
        geometry={nodes.group547325619.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat7}
        geometry={nodes.group1609856760.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat12}
        geometry={nodes.group1019419074.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat7}
        geometry={nodes.group1205001057.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat12}
        geometry={nodes.group1874016474.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.mat5}
        geometry={nodes.group977698350.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        material={materials.mat23}
        geometry={nodes.group1313309135.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/models/cube.glb");
